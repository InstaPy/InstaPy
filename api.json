{
  "args": [
    {
      "name": "enabled",
      "type": [
        "Boolean"
      ],
      "examples": [
        "True",
        "False"
      ]
    },
    {
      "name": "percentage",
      "type": [
        "Number"
      ],
      "examples": [
        "25",
        "80",
        "24",
        "50",
        "10",
        "70",
        "44",
        "72",
        "100",
        "94"
      ]
    },
    {
      "name": "UnNamedBoolean",
      "type": [
        "Boolean"
      ],
      "examples": [
        "True"
      ]
    },
    {
      "name": "UnNamedArray",
      "type": [
        "Array"
      ],
      "examples": [
        "['Awesome','Really Cool','I like your stuff']",
        "['Nice shot!']",
        "['Great Video!']",
        "['Nice shot! @{}']",
        "[\"Cool\",\"Super!\"]",
        "[\"Masterful shot\",\"Chilling!\",\"Unbelievably great...\"]",
        "['Neymar is better than CR7','Soccer is cool']",
        "['friend1','friend2','friend3']",
        "['tag1','tag2']",
        "['user1' ,'user2']",
        "['user1','user2','user3']",
        "['natgeo']",
        "['224442573/salton-sea/']",
        "['224442573']",
        "['natgeo','world']",
        "['soccer','cr7','neymar']",
        "['cycling','roadbike']",
        "['#exactmatch','[startswith',']endswith','broadmatch']",
        "['random_user','another_username']",
        "['glutenfree','french','tasty']"
      ]
    },
    {
      "name": "media",
      "type": [
        "String"
      ],
      "examples": [
        "'Photo'",
        "'Video'"
      ]
    },
    {
      "name": "times",
      "type": [
        "Number"
      ],
      "examples": [
        "2",
        "1"
      ]
    },
    {
      "name": "UnNamedError<Couldn't extract type>",
      "type": [
        "Error<Couldn't extract type>"
      ],
      "examples": [
        "accs"
      ]
    },
    {
      "name": "sleep_delay",
      "type": [
        "Number"
      ],
      "examples": [
        "600",
        "60",
        "501",
        "655",
        "450"
      ]
    },
    {
      "name": "interact",
      "type": [
        "Boolean"
      ],
      "examples": [
        "False",
        "True"
      ]
    },
    {
      "name": "followlist",
      "type": [
        "Array"
      ],
      "examples": [
        "['samantha3','larry_ok']"
      ]
    },
    {
      "name": "UnNamedNumber",
      "type": [
        "Number"
      ],
      "examples": [
        ""
      ]
    },
    {
      "name": "amount",
      "type": [
        "Number",
        "Error<Couldn't extract type>"
      ],
      "examples": [
        "5",
        "6",
        "3",
        "10",
        "100",
        "84",
        "60",
        "126",
        "40",
        "94",
        "200",
        "len(active_unfollowers)"
      ]
    },
    {
      "name": "randomize",
      "type": [
        "Boolean"
      ],
      "examples": [
        "True",
        "False"
      ]
    },
    {
      "name": "photos_grab_amount ",
      "type": [
        "Number"
      ],
      "examples": [
        " 2"
      ]
    },
    {
      "name": "follow_likers_per_photo ",
      "type": [
        "Number"
      ],
      "examples": [
        " 3"
      ]
    },
    {
      "name": "daysold",
      "type": [
        "Number"
      ],
      "examples": [
        "365"
      ]
    },
    {
      "name": "max_pic ",
      "type": [
        "Number"
      ],
      "examples": [
        " 100"
      ]
    },
    {
      "name": "urls",
      "type": [
        "Array",
        "Error<Couldn't extract type>"
      ],
      "examples": [
        "[\"some/URL/1\",\"some/URL/2\" \"other/URL\"]",
        "[\"Fv0J4AJ3Y7r/?taken-at"
      ]
    },
    {
      "name": "customList",
      "type": [
        "Error<Couldn't extract type>"
      ],
      "examples": [
        "(True,custom_list,\"all\")",
        "(True,custom_list,\"nonfollowers\")",
        "(True,[\"user1\",\"user2\",\"user88\",\"user200\"],\"all\")",
        "(True,active_unfollowers,\"all\")"
      ]
    },
    {
      "name": "style",
      "type": [
        "String"
      ],
      "examples": [
        "\"RANDOM\"",
        "\"FIFO\"",
        "\"LIFO\""
      ]
    },
    {
      "name": "unfollow_after",
      "type": [
        "Error<Couldn't extract type>",
        "None"
      ],
      "examples": [
        "55*60*60",
        "90*60*60",
        "42*60*60",
        "3*60*60",
        "48*60*60",
        "22*60*60",
        "None"
      ]
    },
    {
      "name": "InstapyFollowed",
      "type": [
        "Error<Couldn't extract type>"
      ],
      "examples": [
        "(True,\"all\")",
        "(True,\"nonfollowers\")",
        "(False,\"all\")"
      ]
    },
    {
      "name": "nonFollowers",
      "type": [
        "Boolean"
      ],
      "examples": [
        "True",
        "False"
      ]
    },
    {
      "name": "allFollowing",
      "type": [
        "Boolean"
      ],
      "examples": [
        "True",
        "False"
      ]
    },
    {
      "name": "posts",
      "type": [
        "Number"
      ],
      "examples": [
        "5"
      ]
    },
    {
      "name": "potency_ratio",
      "type": [
        "None",
        "Number"
      ],
      "examples": [
        "None",
        "-1.5",
        "2.35",
        "-1.44"
      ]
    },
    {
      "name": "delimit_by_numbers",
      "type": [
        "Boolean"
      ],
      "examples": [
        "True",
        "False"
      ]
    },
    {
      "name": "max_followers",
      "type": [
        "Number"
      ],
      "examples": [
        "22668",
        "400701",
        "10005",
        "52639"
      ]
    },
    {
      "name": "max_following",
      "type": [
        "Number",
        "None"
      ],
      "examples": [
        "10200",
        "90004",
        "24200",
        "None"
      ]
    },
    {
      "name": "min_followers",
      "type": [
        "Number",
        "None"
      ],
      "examples": [
        "400",
        "963",
        "77",
        "None"
      ]
    },
    {
      "name": "min_following",
      "type": [
        "Number"
      ],
      "examples": [
        "240",
        "2310",
        "500",
        "2240"
      ]
    },
    {
      "name": "max",
      "type": [
        "Number",
        "None"
      ],
      "examples": [
        "1005",
        "242",
        "500",
        "32",
        "None",
        "70"
      ]
    },
    {
      "name": "min",
      "type": [
        "Number",
        "None"
      ],
      "examples": [
        "20",
        "None",
        "7",
        "0",
        "4",
        "5"
      ]
    },
    {
      "name": "skip_top_posts",
      "type": [
        "Boolean"
      ],
      "examples": [
        "False"
      ]
    },
    {
      "name": "use_smart_hashtags",
      "type": [
        "Boolean"
      ],
      "examples": [
        "True"
      ]
    },
    {
      "name": "unfollow",
      "type": [
        "Boolean"
      ],
      "examples": [
        "True"
      ]
    },
    {
      "name": "campaign",
      "type": [
        "String"
      ],
      "examples": [
        "'soccer_campaign'"
      ]
    },
    {
      "name": "limit",
      "type": [
        "Number"
      ],
      "examples": [
        "3"
      ]
    },
    {
      "name": "sort",
      "type": [
        "String"
      ],
      "examples": [
        "'top'"
      ]
    },
    {
      "name": "log_tags",
      "type": [
        "Boolean"
      ],
      "examples": [
        "True"
      ]
    }
  ],
  "methods": [
    {
      "name": "set_do_comment",
      "args": [
        "enabled",
        "percentage",
        "UnNamedBoolean"
      ]
    },
    {
      "name": "set_comments",
      "args": [
        "UnNamedArray",
        "media"
      ]
    },
    {
      "name": "set_do_follow",
      "args": [
        "enabled",
        "percentage",
        "times"
      ]
    },
    {
      "name": "follow_by_list",
      "args": [
        "UnNamedError<Couldn't extract type>",
        "times",
        "sleep_delay",
        "interact",
        "followlist"
      ]
    },
    {
      "name": "set_user_interact",
      "args": [
        "UnNamedNumber",
        "amount",
        "randomize",
        "percentage",
        "media"
      ]
    },
    {
      "name": "follow_user_followers",
      "args": [
        "UnNamedArray",
        "amount",
        "randomize",
        "sleep_delay",
        "interact"
      ]
    },
    {
      "name": "follow_user_following",
      "args": [
        "UnNamedArray",
        "amount",
        "randomize",
        "sleep_delay"
      ]
    },
    {
      "name": "follow_by_tags",
      "args": [
        "UnNamedArray",
        "amount"
      ]
    },
    {
      "name": "follow_likers ",
      "args": [
        "UnNamedArray",
        "photos_grab_amount ",
        "follow_likers_per_photo ",
        "randomize",
        "sleep_delay",
        "interact"
      ]
    },
    {
      "name": "follow_commenters",
      "args": [
        "UnNamedArray",
        "amount",
        "daysold",
        "max_pic ",
        "sleep_delay",
        "interact"
      ]
    },
    {
      "name": "set_do_like",
      "args": [
        "UnNamedBoolean",
        "percentage",
        "enabled"
      ]
    },
    {
      "name": "interact_by_users",
      "args": [
        "UnNamedArray",
        "amount",
        "randomize",
        "media"
      ]
    },
    {
      "name": "interact_user_following",
      "args": [
        "UnNamedArray",
        "amount",
        "randomize"
      ]
    },
    {
      "name": "interact_user_followers",
      "args": [
        "UnNamedArray",
        "amount",
        "randomize"
      ]
    },
    {
      "name": "interact_by_URL",
      "args": [
        "urls",
        "randomize",
        "interact"
      ]
    },
    {
      "name": "unfollow_users",
      "args": [
        "amount",
        "customList",
        "style",
        "unfollow_after",
        "sleep_delay",
        "InstapyFollowed",
        "nonFollowers",
        "allFollowing"
      ]
    },
    {
      "name": "set_dont_unfollow_active_users",
      "args": [
        "enabled",
        "posts"
      ]
    },
    {
      "name": "set_relationship_bounds",
      "args": [
        "UnNamedNumber"
      ]
    },
    {
      "name": "set_relationship_bounds ",
      "args": [
        "enabled",
        "potency_ratio",
        "delimit_by_numbers",
        "max_followers",
        "max_following",
        "min_followers",
        "min_following"
      ]
    },
    {
      "name": "set_delimit_liking",
      "args": [
        "enabled",
        "max",
        "min"
      ]
    },
    {
      "name": "set_delimit_commenting",
      "args": [
        "enabled",
        "max",
        "min"
      ]
    },
    {
      "name": "comment_by_locations",
      "args": [
        "UnNamedArray",
        "amount",
        "skip_top_posts"
      ]
    },
    {
      "name": "like_by_locations",
      "args": [
        "UnNamedArray",
        "amount",
        "skip_top_posts"
      ]
    },
    {
      "name": "like_by_tags",
      "args": [
        "UnNamedArray",
        "amount",
        "interact",
        "media",
        "use_smart_hashtags"
      ]
    },
    {
      "name": "like_by_feed",
      "args": [
        "amount",
        "randomize",
        "unfollow",
        "interact"
      ]
    },
    {
      "name": "set_blacklist",
      "args": [
        "enabled",
        "campaign"
      ]
    },
    {
      "name": "set_smart_hashtags",
      "args": [
        "UnNamedArray",
        "limit",
        "sort",
        "log_tags"
      ]
    },
    {
      "name": "set_dont_like",
      "args": [
        "UnNamedArray"
      ]
    },
    {
      "name": "set_ignore_users",
      "args": [
        "UnNamedArray"
      ]
    },
    {
      "name": "set_ignore_if_contains",
      "args": [
        "UnNamedArray"
      ]
    },
    {
      "name": "set_dont_include",
      "args": [
        "UnNamedArray"
      ]
    }
  ]
}